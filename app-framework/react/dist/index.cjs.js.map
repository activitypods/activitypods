{"mappings":"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","sources":["react/src/index.ts","react/src/components/BackgroundChecks.tsx","react/src/utils.ts","react/src/hooks/useGetAppStatus.ts","react/src/hooks/useRegisterApp.ts","react/src/components/LoginPage.tsx","react/src/components/RedirectPage.tsx","react/src/components/ShareButton/ShareButton.js","react/src/components/ShareButton/ShareDialog.js","react/src/components/ShareButton/ContactsShareList.js","react/src/components/ShareButton/ContactItem.js","react/src/components/ShareButton/GroupContactsItem.js","react/src/components/SyncUserLocale.tsx","react/src/components/UserMenu.tsx","react/src/messages/en.ts","react/src/messages/fr.ts"],"sourcesContent":["// Components\nexport { default as BackgroundChecks } from './components/BackgroundChecks';\nexport { default as LoginPage } from './components/LoginPage';\nexport { default as RedirectPage } from './components/RedirectPage';\nexport { default as ShareButton } from './components/ShareButton/ShareButton';\nexport { default as ShareDialog } from './components/ShareButton/ShareDialog';\nexport { default as SyncUserLocale } from './components/SyncUserLocale';\nexport { default as UserMenu } from './components/UserMenu';\n\n// Messages\nexport { default as englishMessages } from './messages/en';\nexport { default as frenchMessages } from './messages/fr';\n","import React, { useCallback, useEffect, useState, useLayoutEffect, FunctionComponent, ReactNode } from 'react';\nimport { useGetIdentity, useDataProvider, useTranslate, useLogout, useRedirect } from 'react-admin';\nimport { Box, CircularProgress, Typography, Button } from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNodeinfo } from '@semapps/activitypub-components';\nimport { arrayOf, delay } from '../utils';\nimport useGetAppStatus from '../hooks/useGetAppStatus';\nimport useRegisterApp from '../hooks/useRegisterApp';\n\n/**\n * Call the /.well-known/app-status endpoint to check the status of the app\n * If the app backend is offline or not installed, display an error message\n * If the app need to be upgraded, redirect the user to the /authorize page\n * If the app is not listening to the provided URLs, display an error message\n * Check this every 2 minutes or whenever the window becomes visible again\n */\nconst BackgroundChecks: FunctionComponent<Props> = ({ clientId, listeningTo = [], children }) => {\n  const { data: identity, isLoading: isIdentityLoading } = useGetIdentity();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const logout = useLogout();\n  const [appStatusChecked, setAppStatusChecked] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string | undefined>();\n  const nodeinfo = useNodeinfo(identity?.id ? new URL(identity?.id as string).host : undefined);\n  const registerApp = useRegisterApp();\n  const getAppStatus = useGetAppStatus();\n  const redirect = useRedirect();\n\n  const isLoggedOut = !isIdentityLoading && !identity?.id;\n\n  if (!clientId) throw new Error(`Missing clientId prop for BackgroundChecks component`);\n\n  const checkAppStatus = useCallback(async () => {\n    // Only proceed if the tab is visible\n    if (!document.hidden && identity?.id) {\n      try {\n        let appStatus = await getAppStatus();\n        if (appStatus) {\n          if (!appStatus.onlineBackend) {\n            setErrorMessage(translate('apods.error.app_offline'));\n            return;\n          }\n\n          if (!appStatus.installed) {\n            await registerApp(clientId, identity.id as string);\n            return;\n          }\n\n          if (appStatus.upgradeNeeded) {\n            const { json: actor } = await dataProvider.fetch(identity.id);\n            const { json: authAgent } = await dataProvider.fetch(actor['interop:hasAuthorizationAgent']);\n            const redirectUrl = new URL(authAgent['interop:hasAuthorizationRedirectEndpoint']);\n            redirectUrl.searchParams.append('client_id', clientId);\n            window.location.href = redirectUrl.toString();\n            return;\n          }\n\n          if (listeningTo.length > 0) {\n            let numAttempts = 0,\n              missingListener;\n\n            do {\n              missingListener = undefined;\n\n              for (const uri of listeningTo) {\n                if (!arrayOf(appStatus.webhookChannels).some(c => c.topic === uri)) {\n                  missingListener = uri;\n                }\n              }\n\n              // If one or more listener were not found, wait 1s and refetch the app status endpoint\n              // This happens when the app was just registered, and the webhooks have not been created yet\n              if (missingListener) {\n                numAttempts++;\n                await delay(1000);\n                appStatus = await getAppStatus();\n              }\n            } while (missingListener && numAttempts < 10);\n\n            if (missingListener) {\n              setErrorMessage(translate('apods.error.app_not_listening', { uri: missingListener }));\n              return;\n            }\n          }\n\n          setAppStatusChecked(true);\n        }\n      } catch (e) {\n        console.error(e);\n        setErrorMessage(translate('apods.error.app_status_unavailable'));\n      }\n    }\n  }, [\n    identity,\n    nodeinfo,\n    getAppStatus,\n    setAppStatusChecked,\n    document,\n    dataProvider,\n    setErrorMessage,\n    translate,\n    registerApp,\n    clientId\n  ]);\n\n  useEffect(() => {\n    if (identity?.id && nodeinfo) {\n      checkAppStatus();\n      const timerId = setInterval(checkAppStatus, 120000);\n      return () => clearInterval(timerId);\n    }\n  }, [identity, nodeinfo, checkAppStatus]);\n\n  useEffect(() => {\n    if (localStorage.getItem('redirect')) {\n      redirect(localStorage.getItem('redirect')!);\n    }\n  }, [redirect]);\n\n  useLayoutEffect(() => {\n    document.addEventListener('visibilitychange', checkAppStatus);\n    return () => document.removeEventListener('visibilitychange', checkAppStatus);\n  }, [checkAppStatus]);\n\n  if (isLoggedOut || appStatusChecked) {\n    return children;\n  } else if (errorMessage) {\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" sx={{ minHeight: 400 }}>\n        <Box sx={{ backgroundColor: 'red', p: 2, textAlign: 'center' }}>\n          <ErrorIcon sx={{ width: 50, height: 50, color: 'white' }} />\n          <Typography color=\"white\">{errorMessage}</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            sx={{ mt: 2, mr: 1 }}\n            onClick={() => {\n              setErrorMessage(undefined);\n              checkAppStatus();\n            }}\n          >\n            {translate('ra.action.refresh')}\n          </Button>\n          <Button variant=\"contained\" color=\"error\" sx={{ mt: 2 }} onClick={() => logout()}>\n            {translate('ra.auth.logout')}\n          </Button>\n        </Box>\n      </Box>\n    );\n  } else {\n    // TODO wait 3s before display loader\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" sx={{ minHeight: 400 }}>\n        <CircularProgress size={100} thickness={6} sx={{ mb: 5, color: 'white' }} />\n      </Box>\n    );\n  }\n};\n\ntype Props = {\n  clientId: string;\n  listeningTo?: string[];\n  children: ReactNode;\n};\n\nexport default BackgroundChecks;\n","export const formatUsername = (uri: string) => {\n  const url = new URL(uri);\n  const username = url.pathname.split('/')[1];\n  return '@' + username + '@' + url.host;\n};\n\n/**\n * Useful, to avoid having to check if the field is an array or not.\n * Useful for json-ld objects where a field can be a single value or an array.\n */\nexport const arrayOf = (value: any | [any] | undefined) => {\n  // If the field is null-ish, we suppose there are no values.\n  if (!value) {\n    return [];\n  }\n  // Return as is.\n  if (Array.isArray(value)) {\n    return value;\n  }\n  // Single value is made an array.\n  return [value];\n};\n\nexport const delay = (t: number) => new Promise(resolve => setTimeout(resolve, t));\n\n// Check the value is a string starting with http and without any white space\nexport const isURL = (value: any) => typeof value === 'string' && value.startsWith('http') && !/\\s/g.test(value);\n\n// Check the value is a string starting with / and without any white space\nexport const isPath = (value: any) => typeof value === 'string' && value.startsWith('/') && !/\\s/g.test(value);\n","import { useCallback } from 'react';\nimport urlJoin from 'url-join';\nimport { useGetIdentity } from 'react-admin';\nimport type { AppStatus } from '../types';\n\nconst useGetAppStatus = (): (() => Promise<AppStatus>) => {\n  const { data: identity } = useGetIdentity();\n\n  return useCallback(async () => {\n    const oidcIssuer = new URL(identity?.id as string).origin;\n    const endpointUrl = urlJoin(oidcIssuer, '.well-known/app-status');\n    const token = localStorage.getItem('token');\n\n    // Don't use dataProvider.fetch as it would go through the proxy\n    const response = await fetch(endpointUrl, {\n      headers: new Headers({ Authorization: `Bearer ${token}`, Accept: 'application/json' })\n    });\n\n    if (response.ok) {\n      return (await response.json()) as AppStatus;\n    } else {\n      throw new Error(`Unable to fetch app status. Error ${response.status} (${response.statusText})`);\n    }\n  }, [identity]);\n};\n\nexport default useGetAppStatus;\n","import { useCallback } from 'react';\nimport LinkHeader from 'http-link-header';\nimport { useDataProvider } from 'react-admin';\n\n/**\n * Return a function that look if an app (clientId) is registered with an user (webId)\n * If not, it redirects to the endpoint provided by the user's authorization agent\n * See https://solid.github.io/data-interoperability-panel/specification/#authorization-agent\n */\nconst useRegisterApp = () => {\n  const dataProvider = useDataProvider();\n\n  const registerApp = useCallback(\n    async (clientId: string, webId: string): Promise<string | void> => {\n      const { json: actor } = await dataProvider.fetch(webId);\n      const authAgentUri = actor['interop:hasAuthorizationAgent'];\n\n      if (authAgentUri) {\n        // Find if an application registration is linked to this user\n        // See https://solid.github.io/data-interoperability-panel/specification/#agent-registration-discovery\n        const { headers, json: authAgent } = await dataProvider.fetch(authAgentUri);\n        const linkHeader = LinkHeader.parse(headers.get('Link'));\n        const registeredAgentLinkHeader = linkHeader.rel('http://www.w3.org/ns/solid/interop#registeredAgent');\n\n        if (registeredAgentLinkHeader.length > 0) {\n          const appRegistrationUri = registeredAgentLinkHeader[0].anchor;\n          return appRegistrationUri;\n        } else {\n          // Save current path, so that the BackgroundChecks component may redirect there after registration\n          localStorage.setItem('redirect', window.location.pathname);\n\n          // No application registration found, redirect to the authorization agent\n          const redirectToAuthAgentUrl = new URL(authAgent['interop:hasAuthorizationRedirectEndpoint']);\n          redirectToAuthAgentUrl.searchParams.append('client_id', clientId);\n          window.location.href = redirectToAuthAgentUrl.toString();\n        }\n      } else {\n        throw new Error(`apods.error.user_authorization_agent_not_found`);\n      }\n    },\n    [dataProvider]\n  );\n\n  return registerApp;\n};\n\nexport default useRegisterApp;\n","import React, { FunctionComponent, Fragment, useEffect, useState } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { useNotify, useLocaleState, useTranslate, useLogin, useLogout, useGetIdentity, useRedirect } from 'react-admin';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  Box,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  Card,\n  Typography\n} from '@mui/material';\nimport LockIcon from '@mui/icons-material/Lock';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport type { PodProvider, SolidOIDCToken } from '../types';\nimport useRegisterApp from '../hooks/useRegisterApp';\nimport { isPath } from '../utils';\n\n/**\n * Display a list of Pod providers that we can log in\n * This list is taken from the https://activitypods.org/data/pod-providers endpoint\n * It is possible to replace it with a custom list of Pod providers\n */\nconst LoginPage: FunctionComponent<Props> = ({ text, clientId, customPodProviders }) => {\n  const notify = useNotify();\n  const [searchParams] = useSearchParams();\n  const [locale] = useLocaleState();\n  const login = useLogin();\n  const logout = useLogout();\n  const translate = useTranslate();\n  const redirect = useRedirect();\n  const { data: identity, isLoading: isIdentityLoading } = useGetIdentity();\n  const [podProviders, setPodProviders] = useState<[PodProvider]>(customPodProviders || []);\n  const [isRegistered, setIsRegistered] = useState<boolean>(false);\n  const isSignup = searchParams.has('signup');\n  const redirectUrl = isPath(searchParams.get('redirect')) ? searchParams.get('redirect')! : '/';\n  const registerApp = useRegisterApp();\n\n  useEffect(() => {\n    (async () => {\n      if (podProviders.length < 1) {\n        const results = await fetch('https://activitypods.org/data/pod-providers', {\n          headers: {\n            Accept: 'application/ld+json'\n          }\n        });\n        if (results.ok) {\n          const json = await results.json();\n          // Filter POD providers by available locales\n          const podProviders = json['ldp:contains'].filter((provider: PodProvider) =>\n            Array.isArray(provider['apods:locales'])\n              ? provider['apods:locales'].includes(locale)\n              : provider['apods:locales'] === locale\n          );\n          setPodProviders(podProviders);\n        } else {\n          notify('auth.message.pod_providers_not_loaded', { type: 'error' });\n        }\n      }\n    })();\n  }, [podProviders, setPodProviders, notify, locale]);\n\n  useEffect(() => {\n    if (searchParams.has('iss')) {\n      // Automatically login if Pod provider is known\n      login({ issuer: searchParams.get('iss'), redirect: redirectUrl });\n    } else if (searchParams.has('register_app')) {\n      // Identity is not available yet because we can't fetch the user profile\n      // So get the webId by decoding the token\n      const token = localStorage.getItem('token');\n      if (token) {\n        const payload = jwtDecode(token) as SolidOIDCToken;\n        registerApp(clientId, payload?.webid)\n          .then(appRegistrationUri => {\n            if (appRegistrationUri) setIsRegistered(true);\n          })\n          .catch(error => {\n            notify(error.message, { type: 'error' });\n          });\n      }\n    } else if (searchParams.has('logout')) {\n      // Immediately logout if required\n      logout({ redirectUrl });\n    }\n  }, [searchParams, login, registerApp, clientId, setIsRegistered, notify, logout, redirectUrl]);\n\n  useEffect(() => {\n    if (!isIdentityLoading && identity?.id && isRegistered) {\n      redirect(redirectUrl);\n    }\n  }, [identity, isIdentityLoading, isRegistered, redirect, redirectUrl]);\n\n  if (isIdentityLoading) return null;\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <Card\n        sx={{\n          minWidth: 300,\n          maxWidth: 350,\n          marginTop: '6em'\n        }}\n      >\n        <Box\n          sx={{\n            margin: '1em',\n            display: 'flex',\n            justifyContent: 'center'\n          }}\n        >\n          <Avatar>\n            <LockIcon />\n          </Avatar>\n        </Box>\n        <Box pl={2} pr={2}>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              textAlign: 'center',\n              padding: '4px 8px 8px'\n            }}\n          >\n            {text || translate('auth.message.choose_pod_provider')}\n          </Typography>\n        </Box>\n        <Box m={2}>\n          <List sx={{ paddingTop: 0, paddingBottom: 0 }}>\n            {podProviders.map((podProvider, i) => (\n              <Fragment key={i}>\n                <Divider />\n                <ListItem>\n                  <ListItemButton\n                    onClick={() =>\n                      login({\n                        issuer: podProvider['apods:baseUrl'],\n                        redirect: redirectUrl,\n                        isSignup\n                      })\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <StorageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={new URL(podProvider['apods:baseUrl']).host}\n                      secondary={podProvider['apods:area']}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              </Fragment>\n            ))}\n          </List>\n        </Box>\n      </Card>\n    </Box>\n  );\n};\n\ntype Props = {\n  text?: string;\n  clientId: string;\n  customPodProviders: [PodProvider];\n};\n\nexport default LoginPage;\n","import { FunctionComponent, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useDataProviderConfig, getUriFromPrefix } from '@semapps/semantic-data-provider';\n\n/**\n * Look for the `type` search param and compare it with React-Admin resources\n * Can be a full or a prefixed URI, in which case the component looks in the `ontologies` prop\n * If a matching resource is found, redirect to the resource's list page\n * If a `uri` search param is passed, redirect to the resource's show page\n * If no matching types are found, simply redirect to the homepage\n * This page is called from the data browser in the Pod provider\n */\nconst RedirectPage: FunctionComponent = () => {\n  const config = useDataProviderConfig();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (config) {\n      const { ontologies, resources } = config;\n      let resourceId;\n\n      if (searchParams.has('type')) {\n        const fullTypeUri = getUriFromPrefix(searchParams.get('type')!, ontologies);\n        resourceId = Object.keys(resources).find(key => resources[key].types?.includes(fullTypeUri));\n      }\n\n      if (searchParams.has('uri') && resourceId) {\n        navigate(\n          `/${resourceId}/${encodeURIComponent(searchParams.get('uri') as string)}${\n            searchParams.get('mode') === 'show' ? '/show' : ''\n          }`\n        );\n      } else if (resourceId) {\n        navigate(`/${resourceId}`);\n      } else {\n        navigate('/');\n      }\n    }\n  }, [config, searchParams, navigate]);\n\n  return null;\n};\n\nexport default RedirectPage;\n","import React, { useState } from 'react';\nimport { Button, useRecordContext, useTranslate } from 'react-admin';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { useCollection } from '@semapps/activitypub-components';\nimport ShareDialog from './ShareDialog';\n\n/**\n * Allow to share the record in the current RecordContext\n * Use the `Announce` and `Offer > Announce` activities handled by ActivityPods\n */\nconst ShareButton = ({ profileResource = 'Profile', groupResource = 'Group' }) => {\n  const [shareOpen, setShareOpen] = useState(false);\n  const record = useRecordContext();\n  const { error, isLoading } = useCollection(record?.['apods:announces']);\n  const translate = useTranslate();\n  // If the user can see the list of announces, it means he can share\n  if (!isLoading && !error) {\n    return (\n      <>\n        <Button label={translate('apods.action.share')} onClick={() => setShareOpen(true)}>\n          <ShareIcon />\n        </Button>\n        {shareOpen && (\n          <ShareDialog\n            resourceUri={record.id}\n            close={() => setShareOpen(false)}\n            profileResource={profileResource}\n            groupResource={groupResource}\n          />\n        )}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default ShareButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useRecordContext, useNotify, useTranslate, useGetIdentity } from 'react-admin';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, useMediaQuery } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { useCollection, useOutbox, ACTIVITY_TYPES } from '@semapps/activitypub-components';\nimport ContactsShareList from './ContactsShareList';\n\n/**\n * @typedef InvitationState\n * @property {boolean} canView\n * @property {boolean} canShare\n * @property {boolean} viewReadonly\n * @property {boolean} shareReadonly\n */\n\nconst useStyles = makeStyles(theme => ({\n  dialogPaper: {\n    margin: 16\n  },\n  title: {\n    padding: 24,\n    paddingBottom: 8,\n    [theme.breakpoints.down('sm')]: {\n      padding: 16,\n      paddingBottom: 4\n    }\n  },\n  actions: {\n    padding: 15,\n    height: 38\n  },\n  list: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    padding: 0\n  },\n  listForm: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingRight: 0,\n    marginRight: 24,\n    height: 400,\n    [theme.breakpoints.down('sm')]: {\n      padding: '0px 16px',\n      margin: 0,\n      height: 'unset' // Full screen height for mobile\n    }\n  }\n}));\n\nconst ShareDialog = ({ close, resourceUri, profileResource = 'Profile', groupResource = 'Group' }) => {\n  const classes = useStyles();\n  const { data: identity } = useGetIdentity();\n  const record = useRecordContext();\n  const translate = useTranslate();\n  const creatorUri = record?.['dc:creator'];\n  const isCreator = creatorUri && creatorUri === identity?.id;\n  const { items: announces } = useCollection(record?.['apods:announces']);\n  const { items: announcers } = useCollection(isCreator ? record?.['apods:announcers'] : undefined);\n  /** @type {[Record<string, InvitationState>, (invitations: Record<string, InvitationState>) => void]} */\n  const [invitations, setInvitations] = useState({});\n  // To keep track of changes...\n  /** @type {[Record<string, InvitationState>, (invitations: Record<string, InvitationState>) => void]} */\n  const [newInvitations, setNewInvitations] = useState({});\n  /** @type {[Record<string, InvitationState>, (invitations: Record<string, InvitationState>) => void]} */\n  const [savedInvitations, setSavedInvitations] = useState({});\n  const [sendingInvitation, setSendingInvitation] = useState(false);\n  const xs = useMediaQuery(theme => theme.breakpoints.down('xs'), {\n    noSsr: true\n  });\n  const outbox = useOutbox();\n  const notify = useNotify();\n\n  // To begin, populate present invitations.\n  // Announcers and announces that are already in the collection are readonly.\n  useEffect(() => {\n    const invitations = [...announces, ...announcers].reduce((acc, actorUri) => {\n      const canView = announces.includes(actorUri);\n      const canShare = announcers.includes(actorUri);\n      return {\n        ...acc,\n        [actorUri]: {\n          canView,\n          canShare,\n          viewReadonly: canView,\n          shareReadonly: canShare\n        }\n      };\n    }, {});\n    setInvitations(invitations);\n    setSavedInvitations(invitations);\n  }, [announces, announcers, setInvitations, setSavedInvitations]);\n\n  /** @param {Record<string, InvitationState} changedRights */\n  const onChange = useCallback(\n    changedRights => {\n      // Compare changedRights to invitations, to know where we need to update the collection.\n      const newInvitationsUnfiltered = {\n        ...newInvitations,\n        ...changedRights\n      };\n      const changedInvitations = Object.fromEntries(\n        Object.entries(newInvitationsUnfiltered).filter(([actorUri, newInvitation]) => {\n          const oldInvitation = savedInvitations[actorUri];\n          return (\n            !!newInvitation.canView !== (!!oldInvitation?.canView || !!oldInvitation?.canShare) ||\n            !!newInvitation.canShare !== !!oldInvitation?.canShare\n          );\n        })\n      );\n      setNewInvitations(changedInvitations);\n\n      setInvitations({\n        ...savedInvitations,\n        ...changedInvitations\n      });\n    },\n    [newInvitations, savedInvitations]\n  );\n\n  const sendInvitations = useCallback(async () => {\n    setSendingInvitation(true);\n    const actorsWithNewViewRight = Object.keys(newInvitations).filter(\n      actorUri => newInvitations[actorUri].canView && !savedInvitations[actorUri]?.canView\n    );\n    if (actorsWithNewViewRight.length > 0) {\n      if (isCreator) {\n        outbox.post({\n          type: ACTIVITY_TYPES.ANNOUNCE,\n          actor: outbox.owner,\n          object: resourceUri,\n          target: actorsWithNewViewRight,\n          to: actorsWithNewViewRight\n        });\n      } else {\n        // Offer the organizer to invite these people\n        outbox.post({\n          type: ACTIVITY_TYPES.OFFER,\n          actor: outbox.owner,\n          object: {\n            type: ACTIVITY_TYPES.ANNOUNCE,\n            actor: outbox.owner,\n            object: resourceUri,\n            target: actorsWithNewViewRight\n          },\n          target: record['dc:creator'],\n          to: record['dc:creator']\n        });\n      }\n    }\n\n    const actorsWithNewShareRight = Object.keys(newInvitations).filter(actorUri => newInvitations[actorUri].canShare);\n    if (actorsWithNewShareRight.length > 0) {\n      outbox.post({\n        type: ACTIVITY_TYPES.OFFER,\n        actor: outbox.owner,\n        object: {\n          type: ACTIVITY_TYPES.ANNOUNCE,\n          object: resourceUri\n        },\n        target: actorsWithNewShareRight,\n        to: actorsWithNewShareRight\n      });\n    }\n\n    notify('apods.notification.invitation_sent', {\n      type: 'success',\n      messageArgs: { smart_count: Object.keys(newInvitations).length }\n    });\n    close();\n  }, [outbox, notify, savedInvitations, newInvitations, isCreator, close, record, resourceUri, setSendingInvitation]);\n\n  if (!identity) return null;\n\n  return (\n    <Dialog fullWidth={!xs} open={true} onClose={close} classes={{ paper: classes.dialogPaper }}>\n      <DialogTitle className={classes.title}>{translate('apods.action.share')}</DialogTitle>\n      <DialogContent className={classes.listForm}>\n        <ContactsShareList\n          invitations={invitations}\n          onChange={onChange}\n          organizerUri={creatorUri}\n          isCreator={isCreator}\n          profileResource={profileResource}\n          groupResource={groupResource}\n        />\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button variant=\"text\" size=\"medium\" onClick={close}>\n          {translate('ra.action.close')}\n        </Button>\n        {Object.keys(newInvitations).length > 0 && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n            onClick={sendInvitations}\n            disabled={sendingInvitation}\n          >\n            {translate('apods.action.send_invitation', {\n              smart_count: Object.keys(newInvitations).length\n            })}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ShareDialog;\n","import React, { useState, useMemo } from 'react';\nimport { useGetList, useTranslate, useGetIdentity } from 'react-admin';\nimport { List, Box, CircularProgress, TextField, Alert } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport ContactItem from './ContactItem';\nimport GroupContactsItem from './GroupContactsItem';\nimport { formatUsername } from '../../utils';\n\n/**\n * @typedef {import('./ShareDialog').InvitationState} InvitationState\n */\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: '98%',\n    maxWidth: '98%',\n    backgroundColor: theme.palette.background.paper,\n    padding: 0\n  }\n}));\n\n/**\n * @param {Object} props\n * @param {Record<string, InvitationState} props.invitations\n * @param {(invitations: Record<string, InvitationState) => void} props.onChange\n * @param {boolean} props.isCreator\n */\nconst ContactsShareList = ({ invitations, onChange, organizerUri, isCreator, profileResource, groupResource }) => {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const { data: identity } = useGetIdentity();\n  const [searchText, setSearchText] = useState('');\n\n  const { data: profilesData, isLoading: loadingProfiles } = useGetList(profileResource, {\n    pagination: { page: 1, perPage: 1000 },\n    sort: { field: 'vcard:given-name', order: 'ASC' }\n  });\n  const { data: groupsData, isLoading: loadingGroups } = useGetList(groupResource, {\n    pagination: { page: 1, perPage: 1000 },\n    sort: { field: 'vcard:label', order: 'ASC' }\n  });\n\n  // Filter here (instead of using the `filter.q` param above) to avoid triggering a SPARQL query on every character change\n  const profilesFiltered = useMemo(\n    () =>\n      profilesData\n        ?.filter(profile => profile.describes !== organizerUri && profile.describes !== identity?.id)\n        .filter(\n          profile =>\n            (profile['vcard:given-name'] || '').toLocaleLowerCase().includes(searchText.toLocaleLowerCase()) ||\n            formatUsername(profile.describes).toLocaleLowerCase().includes(searchText.toLocaleLowerCase())\n        ),\n    [profilesData, searchText, organizerUri, identity]\n  );\n  const groupsFiltered = useMemo(() => {\n    return groupsData?.filter(group =>\n      (group['vcard:label'] || '').toLocaleLowerCase().includes(searchText.toLocaleLowerCase())\n    );\n  }, [groupsData, searchText]);\n\n  return (\n    <List dense className={classes.list}>\n      <TextField\n        type=\"search\"\n        value={searchText}\n        onChange={event => setSearchText(event.target.value)}\n        label={translate('apods.action.search')}\n        fullWidth\n        size=\"small\"\n        margin=\"dense\"\n      />\n      {groupsFiltered?.map(group => (\n        <GroupContactsItem\n          key={group.id}\n          group={group}\n          invitations={invitations}\n          onChange={onChange}\n          isCreator={isCreator}\n        />\n      ))}\n      {profilesFiltered?.map(profile => (\n        <ContactItem\n          key={profile.id}\n          record={profile}\n          invitation={invitations[profile.describes]}\n          onChange={onChange}\n          isCreator={isCreator}\n        />\n      ))}\n      {(loadingProfiles || loadingGroups) && (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={250}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      )}\n      {!loadingProfiles && !profilesFiltered?.length === 0 && (\n        <Alert severity=\"warning\">{translate('apods.helper.no_contact')}</Alert>\n      )}\n    </List>\n  );\n};\n\nexport default ContactsShareList;\n","import React from 'react';\nimport { useTranslate } from 'react-admin';\nimport { Avatar, Switch, ListItemAvatar, ListItemText, ListItem } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport { formatUsername } from '../../utils';\n/**\n * @typedef {import(\"./GroupContactsItem\").InvitationState} InvitationState\n */\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  primaryText: {\n    width: '30%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    flexBasis: '100%'\n  },\n  secondaryText: {\n    textAlign: 'center',\n    width: '60%',\n    fontStyle: 'italic',\n    color: 'grey'\n  },\n  avatarItem: {\n    minWidth: 50\n  },\n  avatar: {\n    backgroundImage: `radial-gradient(circle at 50% 3em, ${theme.palette.primary.light} 0%, ${theme.palette.primary.main} 100%)`\n  }\n}));\n\n/**\n * @param {Object} props\n * @param {import(\"react-admin\").Record} props.record\n * @param {InvitationState} [props.invitation]\n * @param {(invitations: Record<string, InvitationState>) => void} props.onChange\n * @param {boolean} props.isCreator\n */\nconst ContactItem = ({ record, invitation, onChange, isCreator }) => {\n  const classes = useStyles();\n  const translate = useTranslate();\n\n  // The invitation may still be undefined. In that case, create a default one.\n  // TODO: Maybe, this should be handled in the ShareDialog instead?\n  const invitationState = invitation || {\n    canView: false,\n    canShare: false,\n    viewReadonly: false,\n    shareReadonly: !isCreator\n  };\n\n  const changeCanView = () => {\n    const newViewState = !invitationState.canView;\n    onChange({\n      [record.describes]: {\n        ...invitationState,\n        canView: newViewState,\n        // Set to false, if the user can't view the record anymore.\n        canShare: newViewState && invitationState.canShare\n      }\n    });\n  };\n\n  const changeCanShare = () => {\n    const newShareState = !invitationState.canShare;\n    onChange({\n      [record.describes]: {\n        ...invitationState,\n        canShare: newShareState,\n        // Set to true, if the user can share the record.\n        canView: newShareState || invitationState.canView\n      }\n    });\n  };\n\n  return (\n    <ListItem className={classes.listItem}>\n      <ListItemAvatar className={classes.avatarItem}>\n        <Avatar src={record?.['vcard:photo']} className={classes.avatar}>\n          {record['vcard:given-name']?.[0]}\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        className={classes.primaryText}\n        primary={record['vcard:given-name']}\n        secondary={formatUsername(record.describes)}\n      />\n      <ListItemText\n        className={classes.secondaryText}\n        primary={translate('apods.permission.view')}\n        secondary={\n          <Switch\n            size=\"small\"\n            checked={invitationState.canView || invitationState.canShare}\n            disabled={invitationState.viewReadonly}\n            onClick={changeCanView}\n          />\n        }\n      />\n      {isCreator && (\n        <ListItemText\n          className={classes.secondaryText}\n          primary={translate('apods.permission.share')}\n          secondary={\n            <Switch\n              size=\"small\"\n              checked={invitationState.canShare}\n              disabled={invitationState.shareReadonly}\n              onClick={changeCanShare}\n            />\n          }\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default ContactItem;\n","import React, { useCallback } from 'react';\nimport { useTranslate } from 'react-admin';\nimport { Avatar, Switch, ListItemAvatar, ListItemText, ListItem } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport GroupIcon from '@mui/icons-material/Group';\nimport { arrayOf } from '../../utils';\n\n/** @typedef {import(\"./ShareDialog\").InvitationState} InvitationState */\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  primaryText: {\n    width: '30%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    flexBasis: '100%'\n  },\n  secondaryText: {\n    textAlign: 'center',\n    width: '60%',\n    fontStyle: 'italic',\n    color: 'grey'\n  },\n  avatarItem: {\n    minWidth: 50\n  },\n  avatar: {\n    backgroundImage: `radial-gradient(circle at 50% 3em, ${theme.palette.primary.light} 0%, ${theme.palette.primary.main} 100%)`\n  }\n}));\n\n/**\n * @param {Object} props\n * @param {import(\"react-admin\").Record} props.group\n * @param {Record<string, InvitationState} props.invitations\n * @param {(invitations: Record<string, InvitationState>) => void} props.onChange\n * @param {boolean} props.isCreator\n */\nconst GroupContactsItem = ({ group, onChange, invitations, isCreator }) => {\n  const classes = useStyles();\n  const translate = useTranslate();\n\n  const groupMemberIds = arrayOf(group?.['vcard:hasMember']);\n\n  const viewChecked = groupMemberIds.every(\n    memberId => invitations[memberId]?.canView || invitations[memberId]?.canShare\n  );\n  const shareChecked = groupMemberIds.every(memberId => invitations[memberId]?.canShare);\n  const viewSwitchReadonly = groupMemberIds.every(\n    memberId => invitations[memberId]?.viewReadonly || invitations[memberId]?.shareReadonly\n  );\n  const shareSwitchReadonly = groupMemberIds.every(memberId => invitations[memberId]?.shareReadonly);\n\n  const switchShare = useCallback(() => {\n    // Create invitation object for every group member.\n    const newInvitations = Object.fromEntries(\n      groupMemberIds\n        .map(memberId => {\n          if (invitations[memberId]?.shareReadonly) {\n            return [undefined, undefined];\n          } else {\n            const newShareState = !shareChecked;\n            return [\n              memberId,\n              {\n                ...invitations[memberId],\n                canShare: newShareState,\n                canView: newShareState || viewChecked\n              }\n            ];\n          }\n        })\n        .filter(([key, val]) => key && val)\n    );\n    onChange(newInvitations);\n  }, [shareChecked, viewChecked, invitations, onChange, groupMemberIds]);\n\n  const switchView = useCallback(() => {\n    // Create invitation object for every group member.\n    const newInvitations = Object.fromEntries(\n      groupMemberIds\n        .map(memberId => {\n          if (invitations[memberId]?.viewReadonly) {\n            return [undefined, undefined];\n          } else {\n            const newViewState = !viewChecked;\n            return [\n              memberId,\n              {\n                ...invitations[memberId],\n                canView: newViewState,\n                canShare: newViewState && shareChecked\n              }\n            ];\n          }\n        })\n        .filter(([key, val]) => key && val)\n    );\n    onChange(newInvitations);\n  }, [viewChecked, shareChecked, invitations, onChange, groupMemberIds]);\n\n  return (\n    <ListItem className={classes.listItem}>\n      <ListItemAvatar className={classes.avatarItem}>\n        <Avatar src={group?.['vcard:photo']} className={classes.avatar}>\n          <GroupIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText className={classes.primaryText} primary={group?.['vcard:label']} />\n      <ListItemText\n        className={classes.secondaryText}\n        primary={translate('apods.permission.view')}\n        secondary={\n          <Switch size=\"small\" checked={viewChecked} disabled={viewSwitchReadonly || !group} onClick={switchView} />\n        }\n      />\n      {isCreator && (\n        <ListItemText\n          className={classes.secondaryText}\n          primary={translate('apods.permission.share')}\n          secondary={\n            <Switch\n              size=\"small\"\n              checked={shareChecked}\n              disabled={shareSwitchReadonly || !group}\n              onClick={switchShare}\n            />\n          }\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default GroupContactsItem;\n","import { useEffect } from 'react';\nimport { useGetIdentity, useLocaleState } from 'react-admin';\n\n// Set the app locale to the user's locale, if it is set\nconst SyncUserLocale = () => {\n  const [locale, setLocale] = useLocaleState();\n  const { data: identity } = useGetIdentity();\n\n  useEffect(() => {\n    if (identity?.webIdData?.['schema:knowsLanguage'] && identity?.webIdData?.['schema:knowsLanguage'] !== locale) {\n      setLocale(identity?.webIdData?.['schema:knowsLanguage']);\n    }\n  }, [locale, setLocale, identity]);\n};\n\nexport default SyncUserLocale;\n","import React, { FunctionComponent } from 'react';\nimport urlJoin from 'url-join';\nimport { UserMenu as RaUserMenu, Logout, MenuItemLink, useGetIdentity, useTranslate } from 'react-admin';\nimport { MenuItem, ListItemIcon, ListItemText } from '@mui/material';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { useNodeinfo } from '@semapps/activitypub-components';\n\nconst UserMenu: FunctionComponent = () => {\n  const { data: identity } = useGetIdentity();\n  const nodeinfo = useNodeinfo(\n    identity?.webIdData?.['solid:oidcIssuer'] && new URL(identity?.webIdData?.['solid:oidcIssuer']).host\n  );\n  const translate = useTranslate();\n\n  if (identity?.id && !nodeinfo) return null;\n\n  return (\n    <RaUserMenu>\n      {identity?.id ? (\n        [\n          <MenuItem key=\"network\" component=\"a\" href={urlJoin(nodeinfo?.metadata?.frontend_url as string, 'network')}>\n            <ListItemIcon>\n              <PeopleAltIcon />\n            </ListItemIcon>\n            <ListItemText>{translate('apods.user_menu.network')}</ListItemText>\n          </MenuItem>,\n          <MenuItem key=\"apps\" component=\"a\" href={urlJoin(nodeinfo?.metadata?.frontend_url as string, 'apps')}>\n            <ListItemIcon>\n              <AppsIcon />\n            </ListItemIcon>\n            <ListItemText>{translate('apods.user_menu.apps')}</ListItemText>\n          </MenuItem>,\n          <MenuItem key=\"data\" component=\"a\" href={urlJoin(nodeinfo?.metadata?.frontend_url as string, 'data')}>\n            <ListItemIcon>\n              <StorageIcon />\n            </ListItemIcon>\n            <ListItemText>{translate('apods.user_menu.data')}</ListItemText>\n          </MenuItem>,\n          <MenuItem key=\"settings\" component=\"a\" href={urlJoin(nodeinfo?.metadata?.frontend_url as string, 'settings')}>\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText>{translate('apods.user_menu.settings')}</ListItemText>\n          </MenuItem>,\n          <Logout key=\"logout\" />\n        ]\n      ) : (\n        <MenuItemLink to=\"/login\" primaryText={translate('ra.auth.sign_in')} />\n      )}\n    </RaUserMenu>\n  );\n};\n\nexport default UserMenu;\n","// Model https://github.com/marmelab/react-admin/blob/master/packages/ra-language-french/src/index.ts\n\nexport default {\n  apods: {\n    action: {\n      search: 'Search',\n      share: 'Share',\n      send_invitation: 'Send invitation |||| Send %{smart_count} invitations'\n    },\n    helper: {\n      no_contact: 'You must add contacts to your network to share resources with them'\n    },\n    notification: {\n      invitation_sent: '1 invitation sent |||| %{smart_count} invitations sent'\n    },\n    permission: {\n      view: 'Allowed to view',\n      share: 'Invite own contacts'\n    },\n    error: {\n      app_status_unavailable: 'Unable to check app status',\n      app_offline: 'The app backend is offline',\n      app_not_registered: 'The app is not registered',\n      app_not_listening: 'The app is not listening to %{uri}',\n      user_authorization_agent_not_found: 'User authorization agent not found'\n    },\n    user_menu: {\n      network: 'My network',\n      apps: 'My applications',\n      data: 'My data',\n      settings: 'Settings'\n    }\n  }\n};\n","// Model https://github.com/marmelab/react-admin/blob/master/packages/ra-language-french/src/index.ts\n\nexport default {\n  apods: {\n    action: {\n      search: 'Rechercher',\n      send_invitation: \"Envoyer l'invitation |||| Envoyer %{smart_count} invitations\",\n      share: 'Partager'\n    },\n    helper: {\n      no_contact: 'Vous devez ajouter des contacts à votre réseau pour leur partager des ressources'\n    },\n    notification: {\n      invitation_sent: '1 invitation envoyée |||| %{smart_count} invitations envoyées'\n    },\n    permission: {\n      view: 'Droit de voir',\n      share: 'Inviter ses contacts'\n    },\n    error: {\n      app_status_unavailable: \"Impossible de vérifier le statut de l'application\",\n      app_offline: \"L'application est hors ligne\",\n      app_not_registered: \"L'application n'est pas enregistrée\",\n      app_not_listening: \"L'application n'écoute pas %{uri}\"\n    },\n    user_menu: {\n      network: 'Mon réseau',\n      apps: 'Mes applis',\n      data: 'Mes données',\n      settings: 'Paramètres'\n    }\n  }\n};\n"],"names":[],"version":3,"file":"index.cjs.js.map"}